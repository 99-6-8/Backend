name: Deploy to Amazon EC2

on:
  push:
    branches: 
      - main
      - dev
  pull_request:
    branches: 
      - main
      - dev

# 리전, 버킷 이름, CodeDeploy 앱 이름, CodeDeploy 배포 그룹 이름
env:
  AWS_REGION: ap-northeast-2
  S3_BUCKET_NAME: my-github-actions-s3-bucket
  CODE_DEPLOY_APPLICATION_NAME: willbe-codedeploy
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: willbe-group

permissions:
  contents: read

defaults:
  run:
    working-directory: ./HanghaeProject
    
jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    # (1) 기본 체크아웃
    - name: Checkout
      uses: actions/checkout@v3

    # (2) JDK 11 세팅
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '11'
        
    # application-awsS3.properties
    - name: Application-awsS3.properties Keys
      run: |
        touch application-awsS3.properties
        echo "::add-mask::${{ secrets.APPLICATION_AWSS3 }}" >> ./src/main/resources/application-awsS3.properties
        cat application-awsS3.properties
        
    # (3) Gradle build (Test 제외)
    - name: Build with Gradle
      run: |
        chmod +x gradlew           # Grant execute permission for gradlew
        ./gradlew clean build

    # (4) AWS 인증 (IAM 사용자 Access Key, Secret Key 활용)
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    # (5) 빌드 결과물을 S3 버킷에 업로드
    - name: Upload to AWS S3
      run: |
        aws deploy push \
          --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
          --ignore-hidden-files \
          --s3-location s3://$S3_BUCKET_NAME/build_$GITHUB_RUN_ID.zip \
          --source .

    # (6) S3 버킷에 있는 파일을 대상으로 CodeDeploy 실행
    - name: Deploy to AWS EC2 from S3
      run: |
        aws deploy create-deployment \
          --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
          --s3-location bucket=$S3_BUCKET_NAME,key=build_$GITHUB_RUN_ID.zip,bundleType=zip
